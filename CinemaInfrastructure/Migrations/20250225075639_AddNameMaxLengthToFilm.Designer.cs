// <auto-generated />
using System;
using CinemaInfrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CinemaInfrastructure.Migrations
{
    [DbContext(typeof(CinemaContext))]
    [Migration("20250225075639_AddNameMaxLengthToFilm")]
    partial class AddNameMaxLengthToFilm
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CinemaDomain.Model.Booking", b =>
                {
                    b.Property<int>("ViewerId")
                        .HasColumnType("int");

                    b.Property<int>("SessionId")
                        .HasColumnType("int");

                    b.Property<int>("SeatId")
                        .HasColumnType("int");

                    b.HasKey("ViewerId", "SessionId", "SeatId")
                        .HasName("PK__Bookings__830B0B77C94AE9A3");

                    b.HasIndex("SeatId");

                    b.HasIndex("SessionId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("CinemaDomain.Model.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id")
                        .HasName("PK__Companie__3214EC079CF8D54F");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("CinemaDomain.Model.Film", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("FilmCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateOnly>("ReleaseDate")
                        .HasColumnType("date");

                    b.HasKey("Id")
                        .HasName("PK__Films__6D1D217CEFCE6AF1");

                    b.HasIndex("CompanyId");

                    b.HasIndex("FilmCategoryId");

                    b.ToTable("Films");
                });

            modelBuilder.Entity("CinemaDomain.Model.FilmCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id")
                        .HasName("PK__FilmCate__3214EC07A5C8E37D");

                    b.ToTable("FilmCategories");
                });

            modelBuilder.Entity("CinemaDomain.Model.FilmRating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FilmId")
                        .HasColumnType("int");

                    b.Property<int?>("Rating")
                        .HasColumnType("int");

                    b.Property<int>("ViewerId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__FilmRati__3214EC074471E3C0");

                    b.HasIndex("FilmId");

                    b.HasIndex("ViewerId");

                    b.ToTable("FilmRatings");
                });

            modelBuilder.Entity("CinemaDomain.Model.Hall", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("HallTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("NumberOfRows")
                        .HasColumnType("int");

                    b.Property<int>("SeatsInRow")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Halls__7E60E21401F712B2");

                    b.HasIndex("HallTypeId");

                    b.ToTable("Halls");
                });

            modelBuilder.Entity("CinemaDomain.Model.HallType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id")
                        .HasName("PK__HallType__3214EC076C98486F");

                    b.ToTable("HallTypes");
                });

            modelBuilder.Entity("CinemaDomain.Model.Seat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("HallId")
                        .HasColumnType("int");

                    b.Property<int>("NumberInRow")
                        .HasColumnType("int");

                    b.Property<int>("Row")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Seats__311713F3F7CEAC58");

                    b.HasIndex("HallId");

                    b.ToTable("Seats");
                });

            modelBuilder.Entity("CinemaDomain.Model.Session", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<int>("FilmId")
                        .HasColumnType("int");

                    b.Property<int>("HallId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SessionTime")
                        .HasColumnType("datetime");

                    b.HasKey("Id")
                        .HasName("PK__Sessions__C9F49290B2B6A8E6");

                    b.HasIndex("FilmId");

                    b.HasIndex("HallId");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("CinemaDomain.Model.Viewer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id")
                        .HasName("PK__Viewers__3214EC0789042893");

                    b.ToTable("Viewers");
                });

            modelBuilder.Entity("CinemaDomain.Model.Booking", b =>
                {
                    b.HasOne("CinemaDomain.Model.Seat", "Seat")
                        .WithMany("Bookings")
                        .HasForeignKey("SeatId")
                        .IsRequired()
                        .HasConstraintName("FK__Bookings__SeatId__5BE2A6F2");

                    b.HasOne("CinemaDomain.Model.Session", "Session")
                        .WithMany("Bookings")
                        .HasForeignKey("SessionId")
                        .IsRequired()
                        .HasConstraintName("FK__Bookings__Sessio__5AEE82B9");

                    b.HasOne("CinemaDomain.Model.Viewer", "Viewer")
                        .WithMany("Bookings")
                        .HasForeignKey("ViewerId")
                        .IsRequired()
                        .HasConstraintName("FK__Bookings__Viewer__59FA5E80");

                    b.Navigation("Seat");

                    b.Navigation("Session");

                    b.Navigation("Viewer");
                });

            modelBuilder.Entity("CinemaDomain.Model.Film", b =>
                {
                    b.HasOne("CinemaDomain.Model.Company", "Company")
                        .WithMany("Films")
                        .HasForeignKey("CompanyId")
                        .IsRequired()
                        .HasConstraintName("FK__Films__CompanyId__403A8C7D");

                    b.HasOne("CinemaDomain.Model.FilmCategory", "FilmCategory")
                        .WithMany("Films")
                        .HasForeignKey("FilmCategoryId")
                        .IsRequired()
                        .HasConstraintName("FK__Films__FilmCateg__412EB0B6");

                    b.Navigation("Company");

                    b.Navigation("FilmCategory");
                });

            modelBuilder.Entity("CinemaDomain.Model.FilmRating", b =>
                {
                    b.HasOne("CinemaDomain.Model.Film", "Film")
                        .WithMany("FilmRatings")
                        .HasForeignKey("FilmId")
                        .IsRequired()
                        .HasConstraintName("FK__FilmRatin__FilmI__48CFD27E");

                    b.HasOne("CinemaDomain.Model.Viewer", "Viewer")
                        .WithMany("FilmRatings")
                        .HasForeignKey("ViewerId")
                        .IsRequired()
                        .HasConstraintName("FK__FilmRatin__Viewe__47DBAE45");

                    b.Navigation("Film");

                    b.Navigation("Viewer");
                });

            modelBuilder.Entity("CinemaDomain.Model.Hall", b =>
                {
                    b.HasOne("CinemaDomain.Model.HallType", "HallType")
                        .WithMany("Halls")
                        .HasForeignKey("HallTypeId")
                        .IsRequired()
                        .HasConstraintName("FK__Halls__HallTypeI__4D94879B");

                    b.Navigation("HallType");
                });

            modelBuilder.Entity("CinemaDomain.Model.Seat", b =>
                {
                    b.HasOne("CinemaDomain.Model.Hall", "Hall")
                        .WithMany("Seats")
                        .HasForeignKey("HallId")
                        .IsRequired()
                        .HasConstraintName("FK__Seats__HallId__5629CD9C");

                    b.Navigation("Hall");
                });

            modelBuilder.Entity("CinemaDomain.Model.Session", b =>
                {
                    b.HasOne("CinemaDomain.Model.Film", "Film")
                        .WithMany("Sessions")
                        .HasForeignKey("FilmId")
                        .IsRequired()
                        .HasConstraintName("FK__Sessions__FilmId__5070F446");

                    b.HasOne("CinemaDomain.Model.Hall", "Hall")
                        .WithMany("Sessions")
                        .HasForeignKey("HallId")
                        .IsRequired()
                        .HasConstraintName("FK__Sessions__HallId__5165187F");

                    b.Navigation("Film");

                    b.Navigation("Hall");
                });

            modelBuilder.Entity("CinemaDomain.Model.Company", b =>
                {
                    b.Navigation("Films");
                });

            modelBuilder.Entity("CinemaDomain.Model.Film", b =>
                {
                    b.Navigation("FilmRatings");

                    b.Navigation("Sessions");
                });

            modelBuilder.Entity("CinemaDomain.Model.FilmCategory", b =>
                {
                    b.Navigation("Films");
                });

            modelBuilder.Entity("CinemaDomain.Model.Hall", b =>
                {
                    b.Navigation("Seats");

                    b.Navigation("Sessions");
                });

            modelBuilder.Entity("CinemaDomain.Model.HallType", b =>
                {
                    b.Navigation("Halls");
                });

            modelBuilder.Entity("CinemaDomain.Model.Seat", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("CinemaDomain.Model.Session", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("CinemaDomain.Model.Viewer", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("FilmRatings");
                });
#pragma warning restore 612, 618
        }
    }
}
